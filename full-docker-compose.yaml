version: "3"

services:
  api:
    image: api:latest
    build: docker/backend/api
    working_dir: /app
    ports:
      - "5000:5000"
    volumes:
      - ./backend/api/:/app
      - api_node_modules:/app/node_modules
    environment:
      - MONGODB_HOST=mongodb://mongo/app
      - BERT_URL=http://bert:5000
      - BLEURT_URL=http://bleurt:5000
      - GREEDY_MATCHING_URL=http://greedy_matching:5000
      - METEOR_URL=http://meteor:5000
      - MOVER_SCORE_URL=http://moverscore:5000
      - SIMPLE_METRICS_URL=http://simple_metrics:5000
      - SUMM_EVAL_URL=http://summ_eval:5000
      - BERTSUM_URL=http://bertsum:5000
      - SIMPLE_SUMMARIZERS_URL=http://simple_summarizers:5000
      - T5_URL=http://t5:5000
      - BARTCNN_URL=http://bartcnn:5000
      - BARTXSUM_URL=http://bartxsum:5000
      - PEGASUSCNN_URL=http://pegasuscnn:5000
      - PEGASUSXSUM_URL=http://pegasusxsum:5000
      - LONGFORMER2ROBERTA_URL=http://longformer2roberta:5000
      - SENTENCE_TRANSFORMERS_URL=http://sentence_transformers:5000
    command: bash -c "npm install && npm run start"

  bert:
    image: bert:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/bert/:/app
      - bert_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  bleurt:
    image: bleurt:latest
    build: docker/backend/default
    working_dir: /app
    volumes:
      - ./backend//metrics/bleurt/:/app
      - bleurt_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  greedy_matching:
    image: greedy_matching:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/greedy_matching/:/app
      - greedy_matching_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  meteor:
    image: meteor:latest
    build: docker/backend/meteor
    working_dir: /app
    volumes:
      - ./backend/metrics/meteor/:/app
    command: bash -c "pipenv sync && pipenv run python wsgi.py"

  moverscore:
    image: moverscore:latest
    build: docker/backend/default
    working_dir: /app
    volumes:
      - ./backend/metrics/moverscore/:/app
      - moverscore_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  sentence_transformers:
    image: sentence_transformers:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/sentence_transformers/:/app
      - sentence_transformers_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  simple_metrics:
    image: simple_metrics:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/simple/:/app
      - simple_metrics_root:/root
    command: bash -c "pipenv sync && pipenv run python wsgi.py"

  bertsum:
    image: bertsum:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/bertsum/:/app
      - bertsum_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  t5:
    image: t5:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - t5_root:/root
    environment:
      - NEURALSUM_MODEL=T5
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  bartcnn:
    image: bartcnn:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - bartcnn_root:/root
    environment:
      - NEURALSUM_MODEL=BART-CNN
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  bartxsum:
    image: bartxsum:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - bartxsum_root:/root
    environment:
      - NEURALSUM_MODEL=BART-XSum
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  pegasuscnn:
    image: pegasuscnn:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - pegasuscnn_root:/root
    environment:
      - NEURALSUM_MODEL=Pegasus-CNN
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  pegasusxsum:
    image: pegasusxsum:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - pegasusxsum_root:/root
    environment:
      - NEURALSUM_MODEL=Pegasus-XSum
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  longformer2roberta:
    image: longformer2roberta:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/neuralsum/:/app
      - longformer2roberta_root:/root
    environment:
      - NEURALSUM_MODEL=Longformer2Roberta
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  simple_summarizers:
    image: simple_summarizers:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/summarizer/simple/:/app
      - simple_summarizers_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  summ_eval:
    image: summ_eval:latest
    build: docker/backend/summ_eval
    working_dir: /app
    volumes:
      - ./backend/summ_eval/:/app
      - summ_eval_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  frontend:
    image: frontend:latest
    build: docker/frontend
    working_dir: /app
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_HOST=${API_HOST:-localhost}
      - REACT_APP_API_PORT=${API_PORT:-5000}
      - REACT_APP_DEVELOP=true
    command: bash -c "npm install && npm start"

  mongo:
    image: mongo:latest
    volumes:
      - mongodata:/data/db

  summary_viewer:
    image: summary_viewer:latest
    build: docker/backend/slim
    working_dir: /app
    ports:
      - "4000:5000"
    volumes:
      - ./backend/summary-viewer:/app
      - summary_viewer_root:/root
    command: bash -c "pipenv sync && pipenv run python wsgi.py"


volumes:
  mongodata:
  frontend_node_modules:
  api_node_modules:
  bert_root:
  bleurt_root:
  greedy_matching_root:
  moverscore_root:
  simple_metrics_root:
  bertsum_root:
  simple_summarizers_root:
  summ_eval_root:
  t5_root:
  bartcnn_root:
  bartxsum_root:
  pegasuscnn_root:
  pegasusxsum_root:
  longformer2roberta_root:
  summary_viewer_root:
  sentence_transformers_root:
