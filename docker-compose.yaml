version: "3"

services:
  api:
    image: api:latest
    build: docker/backend/api
    working_dir: /app
    ports:
      - "5000:5000"
    volumes:
      - ./backend/api/:/app
    environment:
      - MONGODB_HOST=mongodb://mongo/app
      - BERT_URL=http://bert:5000
      - BLEURT_URL=http://bleurt:5000
      - GREEDY_MATCHING_URL=http://greedy_matching:5000
      - METEOR_URL=http://meteor:5000
      - MOVER_SCORE_URL=http://moverscore:5000
      - SIMPLE_METRICS_URL=http://simple:5000
    command: bash -c "bash /utils/wait-for-it.sh -t 0 mongo:27017 &&
                      bash /utils/wait-for-it.sh -t 0 bert:5000 &&
                      bash /utils/wait-for-it.sh -t 0 bleurt:5000 &&
                      bash /utils/wait-for-it.sh -t 0 greedy_matching:5000 &&
                      bash /utils/wait-for-it.sh -t 0 meteor:5000 &&
                      bash /utils/wait-for-it.sh -t 0 moverscore:5000 &&
                      bash /utils/wait-for-it.sh -t 0 simple:5000 &&
                      pipenv sync &&
                      pipenv run python wsgi.py"

  bert:
    image: bert:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/bert/:/app
      - bert_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  bleurt:
    image: bleurt:latest
    build: docker/backend/default
    working_dir: /app
    volumes:
      - ./backend//metrics/bleurt/:/app
      - bleurt_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  greedy_matching:
    image: greedy_matching:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/greedy_matching/:/app
      - greedy_matching_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  meteor:
    image: meteor:latest
    build: docker/backend/meteor
    working_dir: /app
    volumes:
      - ./backend/metrics/meteor/:/app
    command: bash -c "pipenv sync && pipenv run python wsgi.py"

  moverscore:
    image: moverscore:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/moverscore/:/app
      - moverscore_root:/root
    command: bash -c "pipenv sync && pipenv run python model_setup.py && pipenv run python wsgi.py"

  simple:
    image: simple:latest
    build: docker/backend/slim
    working_dir: /app
    volumes:
      - ./backend/metrics/simple/:/app
      - simple_root:/root
    command: bash -c "pipenv sync && pipenv run python wsgi.py"

  frontend:
    image: frontend:latest
    build: docker/frontend
    working_dir: /app
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/app
      - node_modules:/app/node_modules
    environment:
      - REACT_APP_API_HOST=${API_HOST:-localhost}
      - REACT_APP_API_PORT=${API_PORT:-5000}
      - REACT_APP_DEVELOP=true
    command: bash -c "npm install && npm start"

  mongo:
    image: mongo:latest
    volumes:
      - mongodata:/data/db

volumes:
  bert_root:
  bleurt_root:
  greedy_matching_root:
  moverscore_root:
  simple_root:
  node_modules:
  mongodata:
